INSERT INTO `hostprint` VALUES ('openproxy', 'def _recon(host, myprints, port):\n    pocdict = {\n        \"servicename\":\"openproxy\",\n        \"isService\":False,\n        \"port\":0,\n        \"description\":\"\",\n        \"exception\":\"\"\n    }\n    redirect = GlobalConf().redirect\n    try:\n        req1 = requests.get(redirect[\'url\'], timeout=10, verify=False, proxies={\'http\':\'http://{0}:{1}\'.format(host, port)})\n        if redirect[\'key\'] in req1.text:\n            pocdict[\'isService\'] = True\n            pocdict[\'port\'] = \'TCP: {0}\'.format(port)\n            pocdict[\'description\'] = \'The proxy server is running\'\n    except Exception as e:\n        pocdict[\'exception\'] = e\n    myprints.append(pocdict)\n_recon(self.host, self.prints, self.tport)', '代理服务');
INSERT INTO `hostprint` VALUES ('pcanywhere', 'def _recon(host, myprints, port):\n    pocdict = {\n        \"servicename\":\"svnserve\",\n        \"isService\":False,\n        \"port\":port,\n        \"description\":\"\",\n        \"exception\":\"\"\n    }\n    try:\n        socket.setdefaulttimeout(10)\n        sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n        payload = \'ST\'\n        sock.sendto(payload.encode(), (host, port))\n        response = sock.recv(20).decode(\'utf8\', \'ignore\')\n        if r\'ST\' in response:\n            pocdict[\'isService\'] = True\n            pocdict[\'port\'] = \'UDP: {0}\'.format(port)\n            pocdict[\'description\'] = \'PCanywhere server running\'\n\n    except Exception as e:\n        pocdict[\'exception\'] = e\n    myprints.append(pocdict)\n_recon(self.host, self.prints, self.tport)', '远控程序');
INSERT INTO `hostprint` VALUES ('svnserve', 'def _recon(host, myprints, port):\n    pocdict = {\n        \"servicename\":\"svnserve\",\n        \"isService\":False,\n        \"port\":port,\n        \"description\":\"\",\n        \"exception\":\"\"\n    }\n    try:\n        socket.setdefaulttimeout(10)\n        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n        sock.connect((host, port))\n        response = sock.recv(1024).decode(\'utf8\', \'ignore\')\n        if r\'success\' in response:\n            pocdict[\'isService\'] = True\n            pocdict[\'port\'] = \'TCP: {0}\'.format(port)\n            pocdict[\'description\'] = \'Subversion server running\'\n        sock.close()\n\n    except Exception as e:\n        pocdict[\'exception\'] = e\n    myprints.append(pocdict)\n_recon(self.host, self.prints, self.tport)', '代码仓库');
